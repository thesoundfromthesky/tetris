import{j as g,_ as y,k as f,Q as h,l as x,m as A,n as b,u as T,r as w}from"./index-CfS70t6F.js";import{G as S,A as m}from"./glTFLoader-DQB8554u.js";import"./objectModelMapping-D4YYZYlG.js";class u extends g{constructor(t,e,s,a=5,n=0,r=!1,i=!1,l=3,o=null){super("",t),this._texture=t.getEngine().createRawCubeTexture(e,s,a,n,r,i,l,o)}update(t,e,s,a,n=null){this._texture.getEngine().updateRawCubeTexture(this._texture,t,e,s,a,n)}updateRGBDAsync(t,e=null,s=.8,a=0){return y(this._texture,t,e,s,a).then(()=>{})}clone(){return f.Clone(()=>{const t=this.getScene(),e=this._texture,s=new u(t,e._bufferViewArray,e.width,e.format,e.type,e.generateMipMaps,e.invertY,e.samplingMode,e._compression);return e.source===13&&s.updateRGBDAsync(e._bufferViewArrayArray,e._sphericalPolynomial,e._lodGenerationScale,e._lodGenerationOffset),s},this)}}const c="EXT_lights_image_based";class G{constructor(t){this.name=c,this._loader=t,this.enabled=this._loader.isExtensionUsed(c)}dispose(){this._loader=null,delete this._lights}onLoading(){const t=this._loader.gltf.extensions;if(t&&t[this.name]){const e=t[this.name];this._lights=e.lights}}loadSceneAsync(t,e){return S.LoadExtensionAsync(t,e,this.name,(s,a)=>{this._loader._allMaterialsDirtyRequired=!0;const n=new Array;n.push(this._loader.loadSceneAsync(t,e)),this._loader.logOpen(`${s}`);const r=m.Get(`${s}/light`,this._lights,a.light);return n.push(this._loadLightAsync(`/extensions/${this.name}/lights/${a.light}`,r).then(i=>{this._loader.babylonScene.environmentTexture=i})),this._loader.logClose(),Promise.all(n).then(()=>{})})}_loadLightAsync(t,e){if(!e._loaded){const s=new Array;this._loader.logOpen(`${t}`);const a=new Array(e.specularImages.length);for(let n=0;n<e.specularImages.length;n++){const r=e.specularImages[n];a[n]=new Array(r.length);for(let i=0;i<r.length;i++){const l=`${t}/specularImages/${n}/${i}`;this._loader.logOpen(`${l}`);const o=r[i],_=m.Get(l,this._loader.gltf.images,o);s.push(this._loader.loadImageAsync(`/images/${o}`,_).then(p=>{a[n][i]=p})),this._loader.logClose()}}this._loader.logClose(),e._loaded=Promise.all(s).then(()=>{const n=new u(this._loader.babylonScene,null,e.specularImageSize);if(n.name=e.name||"environment",e._babylonTexture=n,e.intensity!=null&&(n.level=e.intensity),e.rotation){let o=h.FromArray(e.rotation);this._loader.babylonScene.useRightHandedSystem||(o=h.Inverse(o)),x.FromQuaternionToRef(o,n.getReflectionTextureMatrix())}if(!e.irradianceCoefficients)throw new Error(`${t}: Irradiance coefficients are missing`);const r=A.FromArray(e.irradianceCoefficients);r.scaleInPlace(e.intensity),r.convertIrradianceToLambertianRadiance();const i=b.FromHarmonics(r),l=(a.length-1)/Math.log2(e.specularImageSize);return n.updateRGBDAsync(a,i,l)})}return e._loaded.then(()=>e._babylonTexture)}}T(c);w(c,!0,d=>new G(d));export{G as EXT_lights_image_based};
